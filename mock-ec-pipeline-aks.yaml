# Specify python version if you have side-by-side versions
steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.x'
    architecture: 'x64'

# Update pip to latest
- bash: python -m pip install --upgrade pip
  displayName: 'Upgrade pip'

# Update to latest Azure CLI version, min version required for Azure DevOps is 2.10.1
- bash: pip install --pre azure-cli --extra-index-url https://azurecliprod.blob.core.windows.net/edge
  displayName: 'Upgrade Azure CLI'

# Install Azure DevOps extension
- bash: az extension add -n azure-devops
  displayName: 'Install Azure DevOps extension'

- script: echo ${AZURE_DEVOPS_CLI_PAT} | az devops login
  env:
    AZURE_DEVOPS_CLI_PAT: $(System.AccessToken)
  displayName: 'Login Azure DevOps Extension'

- script: az devops configure --defaults organization=$(System.TeamFoundationCollectionUri) project="$(System.TeamProject)" --use-git-aliases true
  displayName: 'Set default Azure DevOps organization and project'

  
# Kubectl tool installer
# Install Kubectl on agent machine
- task: KubectlInstaller@0
  displayName: Kubectl installer
  inputs: 
    kubectlVersion: latest

- script: |
    wget https://github.com/kubernetes/kompose/releases/download/v1.26.1/kompose_1.26.1_amd64.deb
    sudo apt install ./kompose_1.26.1_amd64.deb
  displayName: 'kompose installation'

- script: kompose convert -f docker-compose.yml
  displayName: 'kompose convert'  

- script: az login
  displayName: 'azure login'

- script: az aks get-credentials --resource-group DDS-Kubernetes --name ddsakstest
  displayName: 'Connect to the cluster'

- script: kubectl get node
  displayName: 'Verify the connection'

#- script: kubectl apply -f mock-ec-service.yaml,mock-ec-deployment.yaml,mock-net-networkpolicy.yaml
#  displayName: 'AKS deployment'

#- script: kubectl get deployment,svc,pods
#  displayName: 'Check the service, pods, and deployments'

#- script: kubectl describe svc mock-ec
#  displayName: 'Service'