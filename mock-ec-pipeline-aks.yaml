# Specify python version if you have side-by-side versions
trigger: none
steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.x'
    architecture: 'x64'

# Update pip to latest
- bash: python -m pip install --upgrade pip
  displayName: 'Upgrade pip'

# Update to latest Azure CLI version, min version required for Azure DevOps is 2.10.1
- bash: pip install --pre azure-cli --extra-index-url https://azurecliprod.blob.core.windows.net/edge
  displayName: 'Upgrade Azure CLI'

# Install Azure DevOps extension
- bash: az extension add -n azure-devops
  displayName: 'Install Azure DevOps extension'

- script: echo ${AZURE_DEVOPS_CLI_PAT} | az devops login
  env:
    AZURE_DEVOPS_CLI_PAT: $(System.AccessToken)
  displayName: 'Login Azure DevOps Extension'

- script: az devops configure --defaults organization=$(System.TeamFoundationCollectionUri) project="$(System.TeamProject)" --use-git-aliases true
  displayName: 'Set default Azure DevOps organization and project'

  
# Kubectl tool installer
# Install Kubectl on agent machine
- task: KubectlInstaller@0
  displayName: Kubectl installer
  inputs: 
    kubectlVersion: latest

- script: |
    wget https://github.com/kubernetes/kompose/releases/download/v1.26.1/kompose_1.26.1_amd64.deb
    sudo apt install ./kompose_1.26.1_amd64.deb
  displayName: 'kompose installation'


- script: az login
  displayName: 'azure login'

- script: az account set --subscription 'DDS - Test Environment'
  displayName: 'azure set subscription'

- script: az aks get-credentials --resource-group DDS-Kubernetes --name ddsakstest
  displayName: 'Connect to the cluster'

#- script: cat /home/vsts/.kube/config
#  displayName: 'Verify Kube Configuration'

- script: |
    az aks command invoke  --resource-group DDS-Kubernetes --name ddsakstest  --command "kubectl get deployment,svc,pods -n nodo-sit"
  displayName: 'Delete kubectl mock-ec deployment, pod and service'

- script: |
    sleep 1m
    az aks command invoke  --resource-group DDS-Kubernetes --name ddsakstest  --command "kubectl get deployment,svc,pods -n nodo-sit"
  displayName: 'Verify AKS Connection'

- script: |
    kompose convert -f docker-compose.yml
    cat ./mock-ec-deployment.yaml
    cat ./mock-ec-service.yaml
    cat ./mock-net-networkpolicy.yaml
  displayName: 'Kompose convert' 

- script: |
    az aks command invoke --resource-group DDS-Kubernetes --name ddsakstest --command "kubectl apply -f mock-ec-deployment.yaml -n nodo-sit" --file mock-ec-deployment.yaml
    az aks command invoke --resource-group DDS-Kubernetes --name ddsakstest --command "kubectl apply -f mock-ec-service.yaml -n nodo-sit" --file mock-ec-service.yaml
    az aks command invoke --resource-group DDS-Kubernetes --name ddsakstest --command "kubectl apply -f mock-net-networkpolicy.yaml -n nodo-sit" --file mock-net-networkpolicy.yaml
  displayName: 'AKS mock-ec deployment'

- script: |
    sleep 1m
    az aks command invoke  --resource-group DDS-Kubernetes --name ddsakstest  --command "kubectl get deployment,svc,pods -n nodo-sit"
  displayName: 'Check the service, pods, and deployments'

#- script: kubectl describe svc mock-ec
#  displayName: 'Service'